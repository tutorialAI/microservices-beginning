version: '3.8'

services:
  kafka:
    image: 'bitnami/kafka:latest'
    ports:
      - '9092:9092'
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    container_name: kafka
    # environment:
    #   KAFKA_BROKER_ID: 1
    #   KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    #   KAFKA_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://0.0.0.0:9093
    #   KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
    #   KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
    #   KAFKA_ADVERTISED_LISTENERS: INTERNAL://:9092,EXTERNAL://0.0.0.0:9093
    #   KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    networks:
      - my-network
    volumes:
      - ./kafka_data:/bitnami/kafka/data
    ulimits:
      core:
        soft: -1
        hard: -1

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_PROPERTIES_SSL_SECURE_RANDOM_IMPLEMENTATION: SHA1PRNG
    depends_on:
      - kafka
    networks:
      - my-network

networks:
  my-network:
    external: true

volumes:
  zookeeper-data:
  zookeeper-datalog:
  kafka-data:
